<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">
   
   <!-- 配置事务管理器 -->
   <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
   	<!-- 数据源 -->
   	<property name="dataSource" ref="dataSource"></property>
   </bean>
   
   <!-- 配置事务通知 -->
   <tx:advice id="txAdvice" transaction-manager="transactionManager">
   	<tx:attributes>
   		<!-- 
   		REQUIRED:支持当前事务，如果没有事务，就创建一个事务。建议使用。
   		MANDATORY:支持当前事务，如果没有事务，就抛出异常。
   		NESTED:嵌套事务，允许在当前事务中嵌套事务，如果没有事务，会创建一个。
   		NEVER:强制不使用事务，如果当前有事务，则抛出异常。
   		NOT_SUPPORTED:强制不使用事务，如果当前有事务，则将当前事务挂起。
   		REQUIRES_NEW:创建一个新的事务，如果当前已有事务，则挂起当前事务。
   		SUPPORTS:支持当前事务，如果没有事务，不做任何处理。
   		 -->
   		<tx:method name="insert*" propagation="REQUIRED"/>
   		<tx:method name="save*" propagation="REQUIRED"/>
   		<tx:method name="delete*" propagation="REQUIRED"/>
   		<tx:method name="update*" propagation="REQUIRED"/>
   		<tx:method name="select*" read-only="true"/>
   		<tx:method name="find*" read-only="true"/>
   		<tx:method name="*" propagation="REQUIRED"/>
   	</tx:attributes>
   </tx:advice>
   
   <!-- 配置aop，切面 -->
   <aop:config>
   	<!-- 第一个*表示所有返回值  第二个*表示所有类 第三个*表示所有的方法   ..表示所有的传参类型 -->
   	<aop:pointcut expression="execution(* com.ego.service.*.*(..))" id="pointcut"/>
   	<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
   </aop:config>
</beans>